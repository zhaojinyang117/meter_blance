name: 电表余额查询

on:
  schedule:
    # 每天晚上21:30运行（UTC时间13:30）
    - cron: '30 13 * * *'
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  check-meter-balance:
    runs-on: ubuntu-latest
    environment: 电表  # 指定使用哪个环境
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 安装Microsoft Edge WebDriver
      uses: browser-actions/setup-edge@latest
      
    - name: 验证环境变量
      run: |
        echo "检查环境变量是否设置:"
        if [ -n "$SENDER_EMAIL" ]; then echo "SENDER_EMAIL: 已设置"; else echo "SENDER_EMAIL: 未设置"; fi
        if [ -n "$SENDER_PASSWORD" ]; then echo "SENDER_PASSWORD: 已设置"; else echo "SENDER_PASSWORD: 未设置"; fi
        if [ -n "$RECEIVER_EMAIL" ]; then echo "RECEIVER_EMAIL: 已设置"; else echo "RECEIVER_EMAIL: 未设置"; fi
        if [ -n "$METER_OPENID" ]; then echo "METER_OPENID: 已设置"; else echo "METER_OPENID: 未设置"; fi
        if [ -n "$METER_ID" ]; then echo "METER_ID: 已设置"; else echo "METER_ID: 未设置"; fi
        if [ -n "$METER_TYPE_REMARK" ]; then echo "METER_TYPE_REMARK: 已设置"; else echo "METER_TYPE_REMARK: 未设置"; fi
      
    - name: 运行电表余额查询脚本
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
        METER_OPENID: ${{ secrets.METER_OPENID }}
        METER_ID: ${{ secrets.METER_ID }}
        METER_TYPE_REMARK: ${{ secrets.METER_TYPE_REMARK }}
      run: python meter_balance_action.py
      
    - name: 上传日志
      if: always()  # 即使前面的步骤失败也运行此步骤
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: meter_balance.log
        retention-days: 7